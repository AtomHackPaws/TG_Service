version: "3.7"

services:
  db:
    image: bitnami/postgresql:15.1.0
    restart: always
    ports:
      - 5431:5432
    volumes:
      - postgres_data:/bitnami/postgresql
    env_file:
      - .env
    environment:
      - POSTGRESQL_DATABASE=${POSTGRES_DATABASE}
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRESQL_POSTGRES_PASSWORD=${POSTGRESQL_POSTGRES_PASSWORD}
      - POSTGRESQL_REPLICATION_MODE=master
    networks:
      - atom-dev
  s3storage:
    container_name: s3storage
    image: docker.io/bitnami/minio:2024
    user: root
    ports:
      - '9200:9000'
      - '9201:9001'
    volumes:
      - 'minio_storage:/bitnami/minio/data'
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    networks:
      - atom-dev
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - atom-dev
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - atom-dev
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8082:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    networks:
      - atom-dev
  bot:
    container_name: bot
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: always
    depends_on:
      - kafka-ui
    networks:
      - atom-dev

volumes:
  postgres_data:
  minio_storage:

networks:
  atom-dev:
    external: true
